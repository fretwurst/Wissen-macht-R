DATEN_BF  %>%  ## Daten der Befragung mit Ihren angehängten NF
sjlabelled::as_label %>% ## die Label für die Grafik verwenden, statt der Werte ("männlich", "weiblich")
ggpubr::ggerrorplot(., x = "Geschlecht", y = "KNTR_m", # die UV ist x und die AV ist y
desc_stat = "mean_ci", color = "Geschlecht",  # zeigt die Konfidenzintervalle um die Mittelwerte an
palette = "uchicago", size = .9) + # bei den Paletten können Sie sich umschauen; die hier finde ich nett
labs(x = "Geschlecht", y = "Kontroverse",
title = "Bedeutung des NF Kontroverse nach Geschlecht",
subtitle = "Mittelwertvergleich mit Konfidenzintervall") +
theme(legend.position = "none") +
annotate("text", x = Inf, y = Inf, label = t_Test_Geschlecht_KNTR, vjust = 1, hjust = 1)
DATEN_BF  %>%  ## Daten der Befragung mit Ihren angehängten NF
sjlabelled::as_label %>% ## die Label für die Grafik verwenden, statt der Werte ("männlich", "weiblich")
ggpubr::ggerrorplot(., x = "Geschlecht", y = "KNTR_m", # die UV ist x und die AV ist y
desc_stat = "mean_ci", color = "Geschlecht",  # zeigt die Konfidenzintervalle um die Mittelwerte an
palette = "uchicago", size = .9) + # bei den Paletten können Sie sich umschauen; die hier finde ich nett
labs(x = "Geschlecht", y = "Kontroverse",
title = "Bedeutung des NF Kontroverse nach Geschlecht",
subtitle = "Mittelwertvergleich mit Konfidenzintervall") +
theme(legend.position = "none") +
annotate("text", x = Inf, y = Inf, label = t_Test_Geschlecht_KNTR, vjust = 1, hjust = 1)
t_test <- t.test(KNTR_m ~ Geschlecht, DATEN_BF) # t-Test ausführen und in t_test schreiben
t_Wert <- round(t_test$statistic,2)
p_Wert <- round(t_test$p.value, 3)
df <- round(t_test$parameter,0)
### Hier werden die Werte aus dem t-Test in einen Text geschrieben, den Sie in einer Grafike als Annotation verwenden können
t_Test_Geschlecht_KNTR = paste0("t-Test: \n",
"p-Wert = ", p_Wert, # den p-Wert aus der t_test-List-Ausgabe
"\n (t = ", t_Wert,  # den T-Wert (statistic) aus der t_test-List-Ausgabe
", df = ", df, ")") # und die df (parameter) aus der t_test-List-Ausgabe
DATEN_BF  %>%  ## Daten der Befragung mit Ihren angehängten NF
sjlabelled::as_label %>% ## die Label für die Grafik verwenden, statt der Werte ("männlich", "weiblich")
ggpubr::ggerrorplot(., x = "Geschlecht", y = "KNTR_m", # die UV ist x und die AV ist y
desc_stat = "mean_ci", color = "Geschlecht",  # zeigt die Konfidenzintervalle um die Mittelwerte an
palette = "uchicago", size = .9) + # bei den Paletten können Sie sich umschauen; die hier finde ich nett
labs(x = "Geschlecht", y = "Kontroverse",
title = "Bedeutung des NF Kontroverse nach Geschlecht",
subtitle = "Mittelwertvergleich mit Konfidenzintervall") +
theme(legend.position = "none") +
annotate("text", x = Inf, y = Inf, label = t_Test_Geschlecht_KNTR, vjust = 1, hjust = 1)
# Erstmal eine ANalysis Of VAriance = ANOVA für die Variable KNTR_m nach Altersgruppen (Alter)
ANOVA <- aov(KNTR_m ~ Alter, data = DATEN_BF)
# summary(ANOVA)
p_Wert <- round(summary(ANOVA)[[1]][1,5],3) # hier wird der p-Wert aus der Summary der ANOVA gespeichert
F_Wert <- round(summary(ANOVA)[[1]][1,4],1) # hier der F-Wert
df <- round(summary(ANOVA)[[1]][2,1],0) # hier die df
### Hier werden die Werte aus dem F-Test in einen Text geschrieben, den Sie in einer Grafike als Annotation verwenden können
ANOVA_Alter_KNTR = paste0("F-Test: \n",
"p-Wert = ", p_Wert, # den p-Wert aus der t_test-List-Ausgabe
"\n (F = ", F_Wert,  # den F-Wert (statistic) aus der t_test-List-Ausgabe
", df = ", df, ")") # und die df (parameter) aus der t_test-List-Ausgabe
DATEN_BF %>% ## Daten der Befragung mit Ihren angehängten NF
sjlabelled::as_label() %>% ## die Label für die Grafik verwenden, statt der Werte ("männlich", "weiblich")
ggpubr::ggerrorplot(., x = "Alter", y = "KNTR_m", # die UV ist x und die AV ist y (#Methoden_Einführung! :-)
desc_stat = "mean_ci", color = "Alter",  # zeigt die Konfidenzintervalle um die Mittelwerte an
palette = "uchicago", size = .9) + # bei den Paletten können Sie sich umschauen; die hier finde ich nett
labs(x = "Alter", y = "Kontroverse",
title = "Bedeutung des NF Kontroverse nach Alter",
subtitle = "Mittelwertvergleich mit Konfidenzintervall") +
# theme(legend.position = "none") + # mit oder ohne Legende ok lesbar, was Sie schöner finden
annotate("text", x = Inf, y = .6, label = ANOVA_Alter_KNTR, vjust = 1, hjust = 1) # hier wird der F-Test als Annotation eingefügt
rm(F_Wert, p_Wert, df)
rm(ANOVA_Alter_KNTR)
# Erstmal eine ANalysis Of VAriance = ANOVA für die Variable KNTR_m nach Altersgruppen (Alter)
ANOVA <- aov(KNTR_m ~ Alter, data = DATEN_BF)
# summary(ANOVA)
p_Wert <- round(summary(ANOVA)[[1]][1,5],3) # hier wird der p-Wert aus der Summary der ANOVA gespeichert
F_Wert <- round(summary(ANOVA)[[1]][1,4],1) # hier der F-Wert
df <- round(summary(ANOVA)[[1]][2,1],0) # hier die df
### Hier werden die Werte aus dem F-Test in einen Text geschrieben, den Sie in einer Grafike als Annotation verwenden können
ANOVA_Alter_KNTR = paste0("F-Test: \n",
"p-Wert = ", p_Wert, # den p-Wert aus der t_test-List-Ausgabe
"\n (F = ", F_Wert,  # den F-Wert (statistic) aus der t_test-List-Ausgabe
", df = ", df, ")") # und die df (parameter) aus der t_test-List-Ausgabe
DATEN_BF %>% ## Daten der Befragung mit Ihren angehängten NF
sjlabelled::as_label() %>% ## die Label für die Grafik verwenden, statt der Werte ("männlich", "weiblich")
ggpubr::ggerrorplot(., x = "Alter", y = "KNTR_m", # die UV ist x und die AV ist y (#Methoden_Einführung! :-)
desc_stat = "mean_ci", color = "Alter",  # zeigt die Konfidenzintervalle um die Mittelwerte an
palette = "uchicago", size = .9) + # bei den Paletten können Sie sich umschauen; die hier finde ich nett
labs(x = "Alter", y = "Kontroverse",
title = "Bedeutung des NF Kontroverse nach Alter",
subtitle = "Mittelwertvergleich mit Konfidenzintervall") +
# theme(legend.position = "none") + # mit oder ohne Legende ok lesbar, was Sie schöner finden
annotate("text", x = Inf, y = .6, label = ANOVA_Alter_KNTR, vjust = 1, hjust = 1) # hier wird der F-Test als Annotation eingefügt
rm(F_Wert, p_Wert, df)
# Erstmal eine ANalysis Of VAriance = ANOVA für die Variable KNTR_m nach Altersgruppen (Alter)
ANOVA <- aov(KNTR_m ~ Alter, data = DATEN_BF)
# summary(ANOVA)
p_Wert <- round(summary(ANOVA)[[1]][1,5],3) # hier wird der p-Wert aus der Summary der ANOVA gespeichert
F_Wert <- round(summary(ANOVA)[[1]][1,4],1) # hier der F-Wert
df <- round(summary(ANOVA)[[1]][2,1],0) # hier die df
### Hier werden die Werte aus dem F-Test in einen Text geschrieben, den Sie in einer Grafike als Annotation verwenden können
ANOVA_Alter_KNTR = paste0("F-Test: \n",
"p-Wert = ", p_Wert, # den p-Wert aus der t_test-List-Ausgabe
"\n (F = ", F_Wert,  # den F-Wert (statistic) aus der t_test-List-Ausgabe
", df = ", df, ")") # und die df (parameter) aus der t_test-List-Ausgabe
DATEN_BF %>% ## Daten der Befragung mit Ihren angehängten NF
sjlabelled::as_label() %>% ## die Label für die Grafik verwenden, statt der Werte ("männlich", "weiblich")
ggpubr::ggerrorplot(., x = "Alter", y = "KNTR_m", # die UV ist x und die AV ist y (#Methoden_Einführung! :-)
desc_stat = "mean_ci", color = "Alter",  # zeigt die Konfidenzintervalle um die Mittelwerte an
palette = "uchicago", size = .9) + # bei den Paletten können Sie sich umschauen; die hier finde ich nett
labs(x = "Alter", y = "Kontroverse",
title = "Bedeutung des NF Kontroverse nach Alter",
subtitle = "Mittelwertvergleich mit Konfidenzintervall") +
# theme(legend.position = "none") + # mit oder ohne Legende ok lesbar, was Sie schöner finden
annotate("text", x = Inf, y = .6, label = ANOVA_Alter_KNTR, vjust = 1, hjust = 1) # hier wird der F-Test als Annotation eingefügt
rm(F_Wert, p_Wert, df)
rm(ANOVA_Alter_KNTR)
#| include: false
#| echo: false
#| warning: false
#| message: false
source("_common.Rmd")
DATEN_IA <- DATEN_IA |>
mutate(Nenn_Gr = sjmisc::rec(Nenn_Gesamt, rec = "1:3 = 1; 4:16 = 2; 17:100 = 3")) |>
sjlabelled::set_labels(Nenn_Gr, labels = (c("selten" = 1, "mittel" = 2, "häufig" = 3)))
#| label: setup
library(tidyverse)
DATEN_IA <- readRDS("Daten/DATEN_IA.RDS")
vembedr::embed_youtube("98AhxoljIKg")  |>
vembedr::use_rounded()
#| label: setup
library(tidyverse)
DATEN_IA <- readRDS("Daten/DATEN_IA.RDS")
#| label: setup
library(tidyverse)
source("_common.R")
DATEN_IA <- readRDS("Daten/DATEN_IA.RDS")
DATEN_IA <- DATEN_IA |>
mutate(Nenn_Gr = sjmisc::rec(Nenn_Gesamt, rec = "1:3 = 1; 4:16 = 2; 17:100 = 3")) |>
sjlabelled::set_labels(Nenn_Gr, labels = (c("selten" = 1, "mittel" = 2, "häufig" = 3)))
SCHAD_Nenn_KREUZ <- DATEN_IA |>
sjlabelled::as_label() |>
tidycomm::crosstab(SCHAD, Nenn_Gr, add_total = TRUE, percentages = TRUE, chi_square = TRUE) |> # Chi^2 finden sie in der Console und können es in die Fussnote kopieren
janitor::adorn_totals() |> # Wieder die Gesamtzeile
mutate(across(c(-1), ~paste0(as.character(round(.x * 100, 0)),"%")))  # Wenn Sie Prozentangaben mit %-Zeichen möchten
SCHAD_Nenn_KREUZ |> # Jetzt wird die Tabele noch hübsch gemacht
kableExtra::kable(caption = "Kreuztabelle für Schaden und Rezipienten-Nennungen", # ne Überschrift
booktabs = T, # das sorgt für gute Bücherqualitätstabellen
align = c('l', rep('r', NCOL(SCHAD_Nenn_KREUZ)-1)), # wenn ab der zweiten Spalte alles rechtsbündig, dann geht auch rep("r", NCOL(employ_frq)-1)
linesep = "", # ohne diese Zeile, macht knitr alle 5 Zeilen einen kleinen Abstand, der oft kaum Sinn macht
col.names = c("Nennungen", "keiner", "gering", "gross", "Gesamt"), # Damit können die Überschriften neu gemacht werden
) |>  # noch mehr Anpassungsmöglichkeiten für kable finden Sie bei google: r kable
kableExtra::kable_styling() |>  # hier können Sie stylen, aber bleiben Sie seriös :-)
kableExtra::footnote(general = "Hier könnten/sollten Sie einen allgemeinen Hinweis oder eine kleine Erläuterung zur Tabelle geben.",
general_title = "", # damit Kable unten nicht "Note" schreibt
threeparttable = T # damit längere Fussnoten umgebrochen werden
) |> kableExtra::add_header_above(c("", "Schaden" = 3, "")) |>
kableExtra::row_spec(4, bold = TRUE)
SCHAD_Nenn_KREUZ |> # Jetzt wird die Tabele noch hübsch gemacht
kableExtra::kable(caption = "Kreuztabelle für Schaden und Rezipienten-Nennungen", # ne Überschrift
booktabs = T, # das sorgt für gute Bücherqualitätstabellen
align = c('l', rep('r', NCOL(SCHAD_Nenn_KREUZ)-1)), # wenn ab der zweiten Spalte alles rechtsbündig, dann geht auch rep("r", NCOL(employ_frq)-1)
linesep = "", # ohne diese Zeile, macht knitr alle 5 Zeilen einen kleinen Abstand, der oft kaum Sinn macht
col.names = c("Nennungen", "keiner", "gering", "gross", "Gesamt"), # Damit können die Überschriften neu gemacht werden
)
SCHAD_Nenn_KREUZ
SCHAD_Nenn_KREUZ |> # Jetzt wird die Tabele noch hübsch gemacht
kableExtra::kable(caption = "Kreuztabelle für Schaden und Rezipienten-Nennungen", # ne Überschrift
booktabs = T, # das sorgt für gute Bücherqualitätstabellen
align = c('l', rep('r', NCOL(SCHAD_Nenn_KREUZ)-1)), # wenn ab der zweiten Spalte alles rechtsbündig, dann geht auch rep("r", NCOL(employ_frq)-1)
linesep = "", # ohne diese Zeile, macht knitr alle 5 Zeilen einen kleinen Abstand, der oft kaum Sinn macht
col.names = c("Nennungen", "keiner", "gering", "gross", "Gesamt"), # Damit können die Überschriften neu gemacht werden
) |>  # noch mehr Anpassungsmöglichkeiten für kable finden Sie bei google: r kable
kableExtra::kable_styling() |>  # hier können Sie stylen, aber bleiben Sie seriös :-)
kableExtra::footnote(general = "Hier könnten/sollten Sie einen allgemeinen Hinweis oder eine kleine Erläuterung zur Tabelle geben.",
general_title = "", # damit Kable unten nicht "Note" schreibt
threeparttable = T # damit längere Fussnoten umgebrochen werden
) |> kableExtra::add_header_above(c("", "Schaden" = 3, "")) |>
kableExtra::row_spec(4, bold = TRUE)
SCHAD_Nenn_KREUZ
SCHAD_Nenn_KREUZ <- DATEN_IA |>
sjlabelled::as_label() |>
tidycomm::crosstab(SCHAD, Nenn_Gr, add_total = TRUE, percentages = TRUE, chi_square = TRUE) |> # Chi^2 finden sie in der Console und können es in die Fussnote kopieren
select(-"<NA>") |>
janitor::adorn_totals() |> # Wieder die Gesamtzeile
mutate(across(c(-1), ~paste0(as.character(round(.x * 100, 0)),"%")))  # Wenn Sie Prozentangaben mit %-Zeichen möchte
SCHAD_Nenn_KREUZ |> # Jetzt wird die Tabele noch hübsch gemacht
kableExtra::kable(caption = "Kreuztabelle für Schaden und Rezipienten-Nennungen", # ne Überschrift
booktabs = T, # das sorgt für gute Bücherqualitätstabellen
align = c('l', rep('r', NCOL(SCHAD_Nenn_KREUZ)-1)), # wenn ab der zweiten Spalte alles rechtsbündig, dann geht auch rep("r", NCOL(employ_frq)-1)
linesep = "", # ohne diese Zeile, macht knitr alle 5 Zeilen einen kleinen Abstand, der oft kaum Sinn macht
col.names = c("Nennungen", "keiner", "gering", "gross", "Gesamt"), # Damit können die Überschriften neu gemacht werden
) |>  # noch mehr Anpassungsmöglichkeiten für kable finden Sie bei google: r kable
kableExtra::kable_styling() |>  # hier können Sie stylen, aber bleiben Sie seriös :-)
kableExtra::footnote(general = "Hier könnten/sollten Sie einen allgemeinen Hinweis oder eine kleine Erläuterung zur Tabelle geben.",
general_title = "", # damit Kable unten nicht "Note" schreibt
threeparttable = T # damit längere Fussnoten umgebrochen werden
) |> kableExtra::add_header_above(c("", "Schaden" = 3, "")) |>
kableExtra::row_spec(4, bold = TRUE)
Corr_NF <- DATEN_IA |>
select(PERS:NAEHE) |>
as.matrix() |>
cor()
Corr_NF_test <- DATEN_IA |>
select(PERS:NAEHE) |>
corrplot::cor.mtest(conf.level = .95)
# mehr zu den corrplots hier: https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html
corrplot::corrplot(Corr_NF, p.mat = Corr_NF_test$p,
type = "lower", method = "square",
insig = "pch", diag = FALSE ,
tl.cex=0.6, pch.cex = 0.8, tl.srt = 45)
# mit dem Paket "ufs" recht einfach
DATEN_BF <- DATEN_BF |>
sjlabelled::var_labels(NACHRICHT_TITEL1 = "NZZ",
NACHRICHT_TITEL2 = "TA",
NACHRICHT_TITEL3 = "20 Minuten",
NACHRICHT_TITEL4 = "Blick",
NACHRICHT_TITEL5 = "Watson",
NACHRICHT_TITEL6 = "SRF News",
M112_20 = "Social Media",
M112_21 = "Google News",
M112_23 = "anderes"
)
DATEN_BF |>
select(NACHRICHT_TITEL1:NACHRICHT_TITEL6, M112_20, M112_21, M112_23) |> # hiermit die Variablen auswählen, die zu den Ausprägungen werden
sjlabelled::label_to_colnames() |>  # hier werden die Label der Variablen zu den Zeilennamen
ufs::multiResponse() |> # produziert die Tabelle für die Merhfachantworten
rename("Medium" = "Option", # Hier werden die Spalten umbenannt
"n" = "Frequency",
"Prozent Antworten" = "Percentage of responses",
"Prozent Fälle" = "Percentage of (203) cases" # hier das "#" wegmachen, wenn Sie die richtige Anzahl statt "(203) cases" eingetragen haben
) |>
mutate(across(3:4, ~scales::percent(.x/100,accuracy = 2))) |>
kableExtra::kable(caption = "Mediennuztung der Befragten",
booktabs = T,
align = c('l', 'r', 'r', 'r', 'r'), # wenn ab der zweiten Spalte alles rechtsbündig, dann geht auch rep("r", NCOL(employ_frq)-1)
linesep = "") |>
kableExtra::footnote(general = "Lesebeispiel: 34% der Befragten haben die NZZ genannt. Die NZZ macht 12% aller 544 Mediennennungen aus.",
general_title = "", # damit Kable unten nicht "Note" schreibt
threeparttable = T # damit längere Fussnoten umgebrochen werden
) |>
kableExtra::kable_styling()
DATEN_BF <- readRDS("Daten/DATEN_BF.RDS")
DATEN_BF <- readRDS("Daten/DATEN_BEF.RDS")
# mit dem Paket "ufs" recht einfach
DATEN_BF <- DATEN_BF |>
sjlabelled::var_labels(NACHRICHT_TITEL1 = "NZZ",
NACHRICHT_TITEL2 = "TA",
NACHRICHT_TITEL3 = "20 Minuten",
NACHRICHT_TITEL4 = "Blick",
NACHRICHT_TITEL5 = "Watson",
NACHRICHT_TITEL6 = "SRF News",
M112_20 = "Social Media",
M112_21 = "Google News",
M112_23 = "anderes"
)
DATEN_BF |>
select(NACHRICHT_TITEL1:NACHRICHT_TITEL6, M112_20, M112_21, M112_23) |> # hiermit die Variablen auswählen, die zu den Ausprägungen werden
sjlabelled::label_to_colnames() |>  # hier werden die Label der Variablen zu den Zeilennamen
ufs::multiResponse() |> # produziert die Tabelle für die Merhfachantworten
rename("Medium" = "Option", # Hier werden die Spalten umbenannt
"n" = "Frequency",
"Prozent Antworten" = "Percentage of responses",
"Prozent Fälle" = "Percentage of (203) cases" # hier das "#" wegmachen, wenn Sie die richtige Anzahl statt "(203) cases" eingetragen haben
) |>
mutate(across(3:4, ~scales::percent(.x/100,accuracy = 2))) |>
kableExtra::kable(caption = "Mediennuztung der Befragten",
booktabs = T,
align = c('l', 'r', 'r', 'r', 'r'), # wenn ab der zweiten Spalte alles rechtsbündig, dann geht auch rep("r", NCOL(employ_frq)-1)
linesep = "") |>
kableExtra::footnote(general = "Lesebeispiel: 34% der Befragten haben die NZZ genannt. Die NZZ macht 12% aller 544 Mediennennungen aus.",
general_title = "", # damit Kable unten nicht "Note" schreibt
threeparttable = T # damit längere Fussnoten umgebrochen werden
) |>
kableExtra::kable_styling()
### Wenn Sie die Label bei der Datenaufbereitung schon vergeben haben, müssen Sie das hier natürlich nicht wiederholen
KNTR_frq <- DATEN_IA |> # baue eine Häufigkeitstabelle
select(KNTR) |> # nur KNTR auswählen
sjlabelled::as_label() |>  # die Label verwenden
tidycomm::tab_frequencies(KNTR) |> # eine Häufigkeitstabelle erstellt wird
janitor::adorn_totals() |> # mit dieser Zeile können Sie eine Gesamtzeile unter Ihrer Tabelle einfügen
mutate(Prozent = paste0(as.character(round(percent * 100, 0)),"%")) |> # Wenn Sie Prozentangaben mit %-Zeichen möchten
select(1, n, Prozent) # hier nehmen wir von den Daten nur die erste Spalte 1 und die Fallzahl n und die Prozent
KNTR_frq |>
kableExtra::kable(caption = "Kontroverse",
booktabs = T,
align = c('l', rep('r',2)), # die 10 steht dafür, dass 10 weitere Spalten alle rechtsbündig sind bzw. wären
linesep = "", # ohne diese Zeile, macht knitr alle 5 Zeilen einen kleinen Abstand, der oft kaum Sinn macht
col.names = c("Kontroverse", "Häufigkeit", "Prozent"), # Damit können die Überschriften neu gemacht werden
) |>  # noch mehr Anpassungsmöglichkeiten für kable finden Sie bei google: r kable
footnote(general = "Hier könnten/sollten Sie einen allgemeinen Hinweis oder eine kleine Erläuterung zur Tabelle geben.",
general_title = "", # damit Kable unten nicht "Note" schreibt
threeparttable = T # damit längere Fussnoten umgebrochen werden
) |>
kableExtra::kable_styling()
source("~/.active-rstudio-document", echo=TRUE)
KNTR_frq |>
kableExtra::kable(caption = "Kontroverse",
booktabs = T,
align = c('l', rep('r',2)), # die 10 steht dafür, dass 10 weitere Spalten alle rechtsbündig sind bzw. wären
linesep = "", # ohne diese Zeile, macht knitr alle 5 Zeilen einen kleinen Abstand, der oft kaum Sinn macht
col.names = c("Kontroverse", "Häufigkeit", "Prozent"), # Damit können die Überschriften neu gemacht werden
) |>  # noch mehr Anpassungsmöglichkeiten für kable finden Sie bei google: r kable
kableExtra::footnote(general = "Hier könnten/sollten Sie einen allgemeinen Hinweis oder eine kleine Erläuterung zur Tabelle geben.",
general_title = "", # damit Kable unten nicht "Note" schreibt
threeparttable = T # damit längere Fussnoten umgebrochen werden
) |>
kableExtra::kable_styling()
## Hier die Label vergeben, die nachher im Säulendiagramm erscheinen sollen.
DATEN_IA <- DATEN_IA |>
sjlabelled::var_labels(PERS = "Personalisierung", KNTR = "Kontroverse", SCHAD = "Schaden", NAEHE = "Nähe")
DATEN_IA |>
select(PERS, KNTR, SCHAD, NAEHE, MEDIUM) |> # Auswahl Ihrer NFs
sjlabelled::label_to_colnames() |>
mutate(across(everything(), ~if_else(.x > 0, 1, 0))) |> # Hier alle gleich behandeln, indem alles was grösser als 0 zu 1 wird und alles andere zu 0 (Dummykodierung 0/1)
summarise(across(everything(), ~round(mean(.x, na.rm = TRUE),2)*100)) |> # Mittelwert von 0/1-Dummyvariablen * 100 ist Prozent, gerundet mit 0 Nachkommastellen
pivot_longer(cols = (everything()),
names_to = "NFs", values_to = "Prozent") |>  # Die Tabelle muss noch ins Längsformat gebracht werden für das Balkendiagramm
ggplot(aes(NFs, Prozent)) + # ACHTUNG bei ggplot für die Diagramme wird das + verwendet und nicht |>
geom_col() +
geom_text(aes(label = paste0(format(Prozent), "%")), vjust = -.4) +
xlab("Nachrichtenfaktoren")
DATEN_IA <- DATEN_IA |>
mutate(Nenn_Gr = rec(Nenn_Gesamt, rec = "1:3 = 1; 4:16 = 2; 17:100 = 3")) |>
sjlabelled::set_labels(Nenn_Gr, labels = (c("selten" = 1, "mittel" = 2, "häufig" = 3)))
DATEN_IA <- DATEN_IA |>
mutate(Nenn_Gr = sjmisc::rec(Nenn_Gesamt, rec = "1:3 = 1; 4:16 = 2; 17:100 = 3")) |>
sjlabelled::set_labels(Nenn_Gr, labels = (c("selten" = 1, "mittel" = 2, "häufig" = 3)))
DATEN_IA <- DATEN_IA |>
mutate(Nenn_Gr = sjmisc::rec(Nenn_Gesamt, rec = "1:3 = 1; 4:16 = 2; 17:100 = 3")) |>
sjlabelled::set_labels(Nenn_Gr, labels = (c("selten" = 1, "mittel" = 2, "häufig" = 3)))
# DATEN_IA |> frq(Nenn_Gr) Immer mal schnell checken mit frq, aber nie in den Output!
SCHAD_Nenn_KREUZ <- DATEN_IA |>
sjlabelled::as_label() |>
tidycomm::crosstab(SCHAD, Nenn_Gr, add_total = TRUE, percentages = TRUE, chi_square = TRUE) |> # Chi^2 finden sie in der Console und können es in die Fussnote kopieren
janitor::adorn_totals() |> # Wieder die Gesamtzeile
mutate(across(c(-1), ~paste0(as.character(round(.x * 100, 0)),"%")))  # Wenn Sie Prozentangaben mit %-Zeichen möchten
SCHAD_Nenn_KREUZ |> # Jetzt wird die Tabele noch hübsch gemacht
kableExtra::kable(caption = "Kreuztabelle für Schaden und Rezipienten-Nennungen", # ne Überschrift
booktabs = T, # das sorgt für gute Bücherqualitätstabellen
align = c('l', rep('r', NCOL(SCHAD_Nenn_KREUZ)-1)), # wenn ab der zweiten Spalte alles rechtsbündig, dann geht auch rep("r", NCOL(employ_frq)-1)
linesep = "", # ohne diese Zeile, macht knitr alle 5 Zeilen einen kleinen Abstand, der oft kaum Sinn macht
col.names = c("Nennungen", "keiner", "gering", "gross", "Gesamt"), # Damit können die Überschriften neu gemacht werden
) |>  # noch mehr Anpassungsmöglichkeiten für kable finden Sie bei google: r kable
kableExtra::kable_styling() |>  # hier können Sie stylen, aber bleiben Sie seriös :-)
kableExtra::footnote(general = "Hier könnten/sollten Sie einen allgemeinen Hinweis oder eine kleine Erläuterung zur Tabelle geben.",
general_title = "", # damit Kable unten nicht "Note" schreibt
threeparttable = T # damit längere Fussnoten umgebrochen werden
) |> add_header_above(c("", "Schaden" = 3, "")) |>
kableExtra::row_spec(4, bold = TRUE)
SCHAD_Nenn_KREUZ |> # Jetzt wird die Tabele noch hübsch gemacht
kableExtra::kable(caption = "Kreuztabelle für Schaden und Rezipienten-Nennungen", # ne Überschrift
booktabs = T, # das sorgt für gute Bücherqualitätstabellen
align = c('l', rep('r', NCOL(SCHAD_Nenn_KREUZ)-1)), # wenn ab der zweiten Spalte alles rechtsbündig, dann geht auch rep("r", NCOL(employ_frq)-1)
linesep = "", # ohne diese Zeile, macht knitr alle 5 Zeilen einen kleinen Abstand, der oft kaum Sinn macht
col.names = c("Nennungen", "keiner", "gering", "gross", "Gesamt"), # Damit können die Überschriften neu gemacht werden
) |>  # noch mehr Anpassungsmöglichkeiten für kable finden Sie bei google: r kable
kableExtra::kable_styling() |>  # hier können Sie stylen, aber bleiben Sie seriös :-)
kableExtra::footnote(general = "Hier könnten/sollten Sie einen allgemeinen Hinweis oder eine kleine Erläuterung zur Tabelle geben.",
general_title = "", # damit Kable unten nicht "Note" schreibt
threeparttable = T # damit längere Fussnoten umgebrochen werden
) |> kableExtra::add_header_above(c("", "Schaden" = 3, "")) |>
kableExtra::row_spec(4, bold = TRUE)
SCHAD_Nenn_KREUZ <- DATEN_IA |>
sjlabelled::as_label() |>
tidycomm::crosstab(SCHAD, Nenn_Gr, add_total = TRUE, percentages = TRUE, chi_square = TRUE) |> # Chi^2 finden sie in der Console und können es in die Fussnote kopieren
select(-"<NA>") |>
janitor::adorn_totals() |> # Wieder die Gesamtzeile
mutate(across(c(-1), ~paste0(as.character(round(.x * 100, 0)),"%")))  # Wenn Sie Prozentangaben mit %-Zeichen möchten
SCHAD_Nenn_KREUZ |> # Jetzt wird die Tabele noch hübsch gemacht
kableExtra::kable(caption = "Kreuztabelle für Schaden und Rezipienten-Nennungen", # ne Überschrift
booktabs = T, # das sorgt für gute Bücherqualitätstabellen
align = c('l', rep('r', NCOL(SCHAD_Nenn_KREUZ)-1)), # wenn ab der zweiten Spalte alles rechtsbündig, dann geht auch rep("r", NCOL(employ_frq)-1)
linesep = "", # ohne diese Zeile, macht knitr alle 5 Zeilen einen kleinen Abstand, der oft kaum Sinn macht
col.names = c("Nennungen", "keiner", "gering", "gross", "Gesamt"), # Damit können die Überschriften neu gemacht werden
) |>  # noch mehr Anpassungsmöglichkeiten für kable finden Sie bei google: r kable
kableExtra::kable_styling() |>  # hier können Sie stylen, aber bleiben Sie seriös :-)
kableExtra::footnote(general = "Hier könnten/sollten Sie einen allgemeinen Hinweis oder eine kleine Erläuterung zur Tabelle geben.",
general_title = "", # damit Kable unten nicht "Note" schreibt
threeparttable = T # damit längere Fussnoten umgebrochen werden
) |> kableExtra::add_header_above(c("", "Schaden" = 3, "")) |>
kableExtra::row_spec(4, bold = TRUE)
SELEKT <- DATEN_IA |>
group_by(TC, TAG, MEDIUM) |> # Dieser Schritt ist notwendig, damit Merhfachthematisierungen eines Ereignisses pro Tag in einem Medium nur jeweils einmal gezählt werden
summarise(n = n(), # Anzahl der Themen pro Tag in einem Medium
PERS_m = max(PERS), # Hier werden die höchsten Werte je NF genommen, die an einem Tag in einem Medium zu jedem Thema gefunden wurden
KNTR_m = max(KNTR),
SCHAD_m = max(SCHAD),
NAEHE_m = max(NAEHE)) |>
group_by(TC,TAG) |> # Jetzt kann auf Tag aggregiert werden, weil oben jedes Thema pro Tag und Medium gezählt wurde
summarise(SELEKT = n(), # Anzahl der Medien, die die jeweiligen Themen aufgegriffen haben
Personalisierung = max(PERS_m), # Hier wird das Maximum des jeweiligen NF genommen, also das Maximum der kodierten NF-Stärke aller Medien
Kontroverse = max(KNTR_m),
Schaden = max(SCHAD_m),
Nähe = max(NAEHE_m)) |>
mutate(across(everything(), ~replace(.x, is.na(.x), 0))) |>
ungroup()
SELEKT |>
select(SELEKT:Nähe) |>
cor() |> # Hier wird wieder eine Tabelle mit kable produziert
kable(caption = "Korrelationen zwischen NFs", digits = 2,
booktabs = T,
align = c('rrrrr'), # die 5 steht für 5 Variablen
linesep = "", # ohne diese Zeile, macht knitr alle 5 Zeilen einen kleinen Abstand, der oft kaum Sinn macht
##  col.names = c("Anstellung", "Lokal", "Regional", "National", "Transnational", "Gesamt"), # Damit können die Überschriften neu gemacht werden
) |>  # noch mehr Anpassungsmöglichkeiten für kable finden Sie bei google: r kable
kableExtra::kable_styling() |>  # hier können Sie stylen, aber bleiben Sie seriös :-)
footnote(general = "Hier könnten/sollten Sie einen allgemeinen Hinweis oder eine kleine Erläuterung zur Tabelle geben.",
general_title = "", # damit Kable unten nicht "Note" schreibt
threeparttable = T # damit längere Fussnoten umgebrochen werden
)
SELEKT |>
select(SELEKT:Nähe) |>
cor() |> # Hier wird wieder eine Tabelle mit kable produziert
kable(caption = "Korrelationen zwischen NFs", digits = 2,
booktabs = T,
align = c('rrrrr'), # die 5 steht für 5 Variablen
linesep = "", # ohne diese Zeile, macht knitr alle 5 Zeilen einen kleinen Abstand, der oft kaum Sinn macht
##  col.names = c("Anstellung", "Lokal", "Regional", "National", "Transnational", "Gesamt"), # Damit können die Überschriften neu gemacht werden
) |>  # noch mehr Anpassungsmöglichkeiten für kable finden Sie bei google: r kable
kableExtra::kable_styling() |>  # hier können Sie stylen, aber bleiben Sie seriös :-)
kableExtra::footnote(general = "Hier könnten/sollten Sie einen allgemeinen Hinweis oder eine kleine Erläuterung zur Tabelle geben.",
general_title = "", # damit Kable unten nicht "Note" schreibt
threeparttable = T # damit längere Fussnoten umgebrochen werden
)
SELEKT |>
select(SELEKT:Nähe) |>
cor()
SELEKT |>
select(SELEKT:Nähe) |>
cor() |> # Hier wird wieder eine Tabelle mit kable produziert
kable(caption = "Korrelationen zwischen NFs", digits = 2,
booktabs = T,
align = c('rrrrr'), # die 5 steht für 5 Variablen
linesep = "", # ohne diese Zeile, macht knitr alle 5 Zeilen einen kleinen Abstand, der oft kaum Sinn macht
##  col.names = c("Anstellung", "Lokal", "Regional", "National", "Transnational", "Gesamt"), # Damit können die Überschriften neu gemacht werden
)
source("~/.active-rstudio-document", echo=TRUE)
library(kableExtra, scales)
#| label: setup
library(kableExtra, scales)
library(tidyverse)
source("_common.R")
DATEN_IA <- readRDS("Daten/DATEN_IA.RDS")
DATEN_BF <- readRDS("Daten/DATEN_BF.RDS")
DATEN_BF <- DATEN_BF |>
sjlabelled::var_labels(NACHRICHT_TITEL1 = "NZZ",
NACHRICHT_TITEL2 = "TA",
NACHRICHT_TITEL3 = "20 Minuten",
NACHRICHT_TITEL4 = "Blick",
NACHRICHT_TITEL5 = "Watson",
NACHRICHT_TITEL6 = "SRF News",
M112_20 = "Social Media",
M112_21 = "Google News",
M112_23 = "anderes"
)
DATEN_BF |>
select(NACHRICHT_TITEL1:NACHRICHT_TITEL6, M112_20, M112_21, M112_23) |> # hiermit die Variablen auswählen, die zu den Ausprägungen werden
sjlabelled::label_to_colnames() |>  # hier werden die Label der Variablen zu den Zeilennamen
ufs::multiResponse() |> # produziert die Tabelle für die Merhfachantworten
rename("Medium" = "Option", # Hier werden die Spalten umbenannt
"n" = "Frequency",
"Prozent Antworten" = "Percentage of responses",
"Prozent Fälle" = "Percentage of (203) cases" # hier das "#" wegmachen, wenn Sie die richtige Anzahl statt "(203) cases" eingetragen haben
) |>
mutate(across(3:4, ~scales::percent(.x/100,accuracy = 2))) |>
kableExtra::kable(caption = "Mediennuztung der Befragten",
booktabs = T,
align = c('l', 'r', 'r', 'r', 'r'), # wenn ab der zweiten Spalte alles rechtsbündig, dann geht auch rep("r", NCOL(employ_frq)-1)
linesep = "") |>
kableExtra::footnote(general = "Lesebeispiel: 34% der Befragten haben die NZZ genannt. Die NZZ macht 12% aller 544 Mediennennungen aus.",
general_title = "", # damit Kable unten nicht "Note" schreibt
threeparttable = T # damit längere Fussnoten umgebrochen werden
) |>
kableExtra::kable_styling()
DATEN_BF |>
select(NACHRICHT_TITEL1:NACHRICHT_TITEL6, M112_20, M112_21, M112_23) |> # hiermit die Variablen auswählen, die zu den Ausprägungen werden
sjlabelled::label_to_colnames() |>  # hier werden die Label der Variablen zu den Zeilennamen
ufs::multiResponse()
DATEN_BF |>
select(NACHRICHT_TITEL1:NACHRICHT_TITEL6, M112_20, M112_21, M112_23)
#| label: setup
library(kableExtra, scales)
library(tidyverse)
source("_common.R")
DATEN_IA <- readRDS("Daten/DATEN_IA.RDS")
DATEN_BF <- readRDS("Daten/DATEN_BF.RDS")
# mit dem Paket "ufs" recht einfach
DATEN_BF <- DATEN_BF |>
sjlabelled::var_labels(NACHRICHT_TITEL1 = "NZZ",
NACHRICHT_TITEL2 = "TA",
NACHRICHT_TITEL3 = "20 Minuten",
NACHRICHT_TITEL4 = "Blick",
NACHRICHT_TITEL5 = "Watson",
NACHRICHT_TITEL6 = "SRF News",
M112_20 = "Social Media",
M112_21 = "Google News",
M112_23 = "anderes"
)
DATEN_BF |>
select(NACHRICHT_TITEL1:NACHRICHT_TITEL6, M112_20, M112_21, M112_23) |> # hiermit die Variablen auswählen, die zu den Ausprägungen werden
sjlabelled::label_to_colnames() |>  # hier werden die Label der Variablen zu den Zeilennamen
ufs::multiResponse() |> # produziert die Tabelle für die Merhfachantworten
rename("Medium" = "Option", # Hier werden die Spalten umbenannt
"n" = "Frequency",
"Prozent Antworten" = "Percentage of responses",
"Prozent Fälle" = "Percentage of (203) cases" # hier das "#" wegmachen, wenn Sie die richtige Anzahl statt "(203) cases" eingetragen haben
) |>
mutate(across(3:4, ~scales::percent(.x/100,accuracy = 2))) |>
kableExtra::kable(caption = "Mediennuztung der Befragten",
booktabs = T,
align = c('l', 'r', 'r', 'r', 'r'), # wenn ab der zweiten Spalte alles rechtsbündig, dann geht auch rep("r", NCOL(employ_frq)-1)
linesep = "") |>
kableExtra::footnote(general = "Lesebeispiel: 34% der Befragten haben die NZZ genannt. Die NZZ macht 12% aller 544 Mediennennungen aus.",
general_title = "", # damit Kable unten nicht "Note" schreibt
threeparttable = T # damit längere Fussnoten umgebrochen werden
) |>
kableExtra::kable_styling()
vembedr::embed_youtube("aU0uetWJXis") |>
vembedr::use_rounded()
vembedr::embed_youtube("7_WjjClQGUw") |>
vembedr::use_rounded()
